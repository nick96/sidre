name: Release
on:
  tags:
    - '*-v[0-9]+.[0-9]+.[0-9]+'

jobs:
  build-release:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Install required system packages
      run: |
        sudo apt-get update && \
          sudo apt-get install -y pkg-config libssl-dev build-essential xml-security-c-utils libxmlsec1-dev libclang-dev clang llvm libxml2-dev
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true
        components: rustc
    - name: Cache cargo directories
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Cache cargo target dir
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

    - name: Get the crate name
      id: get_crate
      run: echo ::set-output name=CRATE::$(echo ${GITHUB_REF/refs\/tags\//} | sed -E -e 's/-v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+$//')

    - name: Get the tagged version
      id: get_tagged_version
      run: echo ::set-output name=VERSION::$(echo ${GITHUB_REF/refs\/tags\//} sed -E -e 's/.*-v([[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+)$/\1/')
    - name: Get the Cargo.toml version
      id: get_cargo_version
      run: echo ::set-output name=VERSION::grep -i 'version' ${{ steps.get_crate.outputs.CRATE}}/Cargo.toml | sed 's/version = "\(.*\)"$/\1/'
    - name: Check the tagged version and Cargo.toml version are the name
      run: |
        [[ "${{ steps.get_tagged_version.VERSION }}" -eq "${{ steps.get_cargo_version.VERSION }}" ]]

    - name: Sanity check - Release build
      run: cargo build --locked -p ${{ steps.get_crate.outputs.CRATE}} --release
    - name: Sanity check - Docs build
      run: cargo doc --locked -p ${{ steps.get_crate.outputs.CRATE}} --no-deps --release
    - name: Sanity check - Tests
      run: cargo test --locked -p ${{ steps.get_crate.outputs.CRATE}} --release

    - name: Publish crate
      run: |
        pushd ${{ steps.get_crates.outputs.CRATE }}
        cargo publish --token ${{ secrets.CRATES_TOKEN }}
